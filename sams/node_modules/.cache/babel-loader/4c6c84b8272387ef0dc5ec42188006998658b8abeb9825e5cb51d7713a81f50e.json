{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"v-app\", [_c(\"v-app-bar\", {\n    attrs: {\n      absolute: \"\"\n    }\n  }), _c(\"NavDrawerTwo\"), _c(\"v-container\", {\n    staticClass: \"fill-height\",\n    attrs: {\n      fluid: \"\"\n    }\n  }, [_c(\"div\", [_vm.show ? _c(\"b-form\", {\n    on: {\n      submit: _vm.onSubmit,\n      reset: _vm.onReset\n    }\n  }, [_c(\"b-form-group\", {\n    attrs: {\n      id: \"input-group-1\",\n      label: \"Email address:\",\n      \"label-for\": \"input-1\"\n    }\n  }, [_c(\"b-form-input\", {\n    attrs: {\n      id: \"input-1\",\n      type: \"email\",\n      placeholder: \"Enter email\",\n      required: \"\"\n    },\n    model: {\n      value: _vm.form.email,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"email\", $$v);\n      },\n      expression: \"form.email\"\n    }\n  })], 1), _c(\"b-form-group\", {\n    attrs: {\n      id: \"input-group-2\",\n      label: \"Your Name:\",\n      \"label-for\": \"input-2\"\n    }\n  }, [_c(\"b-form-input\", {\n    attrs: {\n      id: \"input-2\",\n      placeholder: \"Enter name\",\n      required: \"\"\n    },\n    model: {\n      value: _vm.form.name,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"name\", $$v);\n      },\n      expression: \"form.name\"\n    }\n  })], 1), _c(\"b-form-group\", {\n    attrs: {\n      id: \"input-group-3\",\n      label: \"Food:\",\n      \"label-for\": \"input-3\"\n    }\n  }, [_c(\"b-form-select\", {\n    attrs: {\n      id: \"input-3\",\n      options: _vm.foods,\n      required: \"\"\n    },\n    model: {\n      value: _vm.form.food,\n      callback: function ($$v) {\n        _vm.$set(_vm.form, \"food\", $$v);\n      },\n      expression: \"form.food\"\n    }\n  })], 1), _c(\"b-form-group\", {\n    attrs: {\n      id: \"input-group-4\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function ({\n        ariaDescribedby\n      }) {\n        return [_c(\"b-form-checkbox-group\", {\n          attrs: {\n            id: \"checkboxes-4\",\n            \"aria-describedby\": ariaDescribedby\n          },\n          model: {\n            value: _vm.form.checked,\n            callback: function ($$v) {\n              _vm.$set(_vm.form, \"checked\", $$v);\n            },\n            expression: \"form.checked\"\n          }\n        }, [_c(\"b-form-checkbox\", {\n          attrs: {\n            value: \"me\"\n          }\n        }, [_vm._v(\"Check me out\")]), _c(\"b-form-checkbox\", {\n          attrs: {\n            value: \"that\"\n          }\n        }, [_vm._v(\"Check that out\")])], 1)];\n      }\n    }], null, false, 531429359)\n  }), _c(\"b-button\", {\n    attrs: {\n      type: \"submit\",\n      variant: \"primary\"\n    }\n  }, [_vm._v(\"Submit\")]), _c(\"b-button\", {\n    attrs: {\n      type: \"reset\",\n      variant: \"danger\"\n    }\n  }, [_vm._v(\"Reset\")])], 1) : _vm._e(), _c(\"b-card\", {\n    staticClass: \"mt-3\",\n    attrs: {\n      header: \"Form Data Result\"\n    }\n  }, [_c(\"pre\", {\n    staticClass: \"m-0\"\n  }, [_vm._v(_vm._s(_vm.form))])])], 1)]), _c(\"FooterView\")], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","map":{"version":3,"names":["render","_vm","_c","_self","attrs","absolute","staticClass","fluid","show","on","submit","onSubmit","reset","onReset","id","label","type","placeholder","required","model","value","form","email","callback","$$v","$set","expression","name","options","foods","food","scopedSlots","_u","key","fn","ariaDescribedby","checked","_v","variant","_e","header","_s","staticRenderFns","_withStripped"],"sources":["/home/gift/Desktop/sams/src/components/StudentOne.vue"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"v-app\",\n    [\n      _c(\"v-app-bar\", { attrs: { absolute: \"\" } }),\n      _c(\"NavDrawerTwo\"),\n      _c(\"v-container\", { staticClass: \"fill-height\", attrs: { fluid: \"\" } }, [\n        _c(\n          \"div\",\n          [\n            _vm.show\n              ? _c(\n                  \"b-form\",\n                  { on: { submit: _vm.onSubmit, reset: _vm.onReset } },\n                  [\n                    _c(\n                      \"b-form-group\",\n                      {\n                        attrs: {\n                          id: \"input-group-1\",\n                          label: \"Email address:\",\n                          \"label-for\": \"input-1\",\n                        },\n                      },\n                      [\n                        _c(\"b-form-input\", {\n                          attrs: {\n                            id: \"input-1\",\n                            type: \"email\",\n                            placeholder: \"Enter email\",\n                            required: \"\",\n                          },\n                          model: {\n                            value: _vm.form.email,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.form, \"email\", $$v)\n                            },\n                            expression: \"form.email\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"b-form-group\",\n                      {\n                        attrs: {\n                          id: \"input-group-2\",\n                          label: \"Your Name:\",\n                          \"label-for\": \"input-2\",\n                        },\n                      },\n                      [\n                        _c(\"b-form-input\", {\n                          attrs: {\n                            id: \"input-2\",\n                            placeholder: \"Enter name\",\n                            required: \"\",\n                          },\n                          model: {\n                            value: _vm.form.name,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.form, \"name\", $$v)\n                            },\n                            expression: \"form.name\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"b-form-group\",\n                      {\n                        attrs: {\n                          id: \"input-group-3\",\n                          label: \"Food:\",\n                          \"label-for\": \"input-3\",\n                        },\n                      },\n                      [\n                        _c(\"b-form-select\", {\n                          attrs: {\n                            id: \"input-3\",\n                            options: _vm.foods,\n                            required: \"\",\n                          },\n                          model: {\n                            value: _vm.form.food,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.form, \"food\", $$v)\n                            },\n                            expression: \"form.food\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                    _c(\"b-form-group\", {\n                      attrs: { id: \"input-group-4\" },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function ({ ariaDescribedby }) {\n                              return [\n                                _c(\n                                  \"b-form-checkbox-group\",\n                                  {\n                                    attrs: {\n                                      id: \"checkboxes-4\",\n                                      \"aria-describedby\": ariaDescribedby,\n                                    },\n                                    model: {\n                                      value: _vm.form.checked,\n                                      callback: function ($$v) {\n                                        _vm.$set(_vm.form, \"checked\", $$v)\n                                      },\n                                      expression: \"form.checked\",\n                                    },\n                                  },\n                                  [\n                                    _c(\n                                      \"b-form-checkbox\",\n                                      { attrs: { value: \"me\" } },\n                                      [_vm._v(\"Check me out\")]\n                                    ),\n                                    _c(\n                                      \"b-form-checkbox\",\n                                      { attrs: { value: \"that\" } },\n                                      [_vm._v(\"Check that out\")]\n                                    ),\n                                  ],\n                                  1\n                                ),\n                              ]\n                            },\n                          },\n                        ],\n                        null,\n                        false,\n                        531429359\n                      ),\n                    }),\n                    _c(\n                      \"b-button\",\n                      { attrs: { type: \"submit\", variant: \"primary\" } },\n                      [_vm._v(\"Submit\")]\n                    ),\n                    _c(\n                      \"b-button\",\n                      { attrs: { type: \"reset\", variant: \"danger\" } },\n                      [_vm._v(\"Reset\")]\n                    ),\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _c(\n              \"b-card\",\n              { staticClass: \"mt-3\", attrs: { header: \"Form Data Result\" } },\n              [_c(\"pre\", { staticClass: \"m-0\" }, [_vm._v(_vm._s(_vm.form))])]\n            ),\n          ],\n          1\n        ),\n      ]),\n      _c(\"FooterView\"),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}