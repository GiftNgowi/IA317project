{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getSignerContract } from \"../interfaces/global.interface\";\nexport default {\n  name: \"HomeView\",\n  data: () => ({\n    step: \"\",\n    // path: \"\",\n\n    props: {\n      source: String\n    },\n    valid: true,\n    email: \"\",\n    emailRules: [v => !!v || \"E-mail is required\", v => /.+@.+\\..+/.test(v) || \"E-mail must be valid\"],\n    password: \"\",\n    passwordRules: [\n      //(v) => !!v || \"Password is required\",\n      //(v) => /.+@.+\\..+/.test(v) || \"Password invalid\",\n    ]\n  }),\n  methods: {\n    validate() {\n      this.$refs.form.validate();\n    },\n    async retrieveRequests() {\n      //verify if the browser is running MetaMask\n      if (typeof window.ethereum !== \"undefined\") {\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        document.querySelector(\"#connectButton\").innerHTML = \"CONNECTED\";\n      } else {\n        document.querySelector(\"#connectButton\").innerHTML = \"please install metamask!\";\n      }\n    },\n    async loginAdmin() {\n      if (window.ethereum) {\n        const contract = (await getSignerContract()).contract;\n        const result = await contract.isAdmin();\n        if (result.hash) {\n          this.$router.push(\"AdminOne\");\n        } else {\n          alert(\"Not Authorized\");\n        }\n      }\n    },\n    async loginUsers() {\n      if (window.ethereum) {\n        const contract = (await getSignerContract()).contract;\n        const result = await contract.loginUser();\n        // Check if transaction is successful\n        if (result.hash) {\n          this.$router.push(\"StudentOne\");\n        } else {\n          alert(\"Not Authorized\");\n        }\n      } else {\n        console.error(\"Ethereum provider not available in the browser.\");\n      }\n    }\n    // async loginUsers() {\n    //   if (window.ethereum) {\n    //     // const contract = (await getSignerContract()).contract;\n    //     const provider = new ethers.providers.Web3Provider(window.ethereum);\n    //     const signer = provider.getSigner();\n    //     const contract = new ethers.Contract(contractAddress, ABI, signer)\n\n    //     const result = await contract.loginUser();\n    //     // Check if transaction is successful\n    //     if (result.hash) {\n    //       this.$router.push('StudentOne')\n    //     } else {\n    //       alert('Not Authorized')\n    //     }\n    //   }\n    //   else {\n    //     console.error(\"Ethereum provider not available in the browser.\");\n    //   }\n  }\n};","map":{"version":3,"mappings":";AAwHA;AAEA;EACAA;EACAC;IACAC;IACA;;IAEAC;MACAC;IACA;IACAC;IACAC;IACAC,aACAC,kCACAA,mDACA;IACAC;IACAC;MACA;MACA;IAAA;EAEA;EAEAC;IACAC;MACA;IACA;IACA;MACA;MACA;QACA;UAAAC;QAAA;QACAC;MACA;QACAA,qDACA;MACA;IACA;IACA;MACA;QACA;QACA;QACA;UACA;QACA;UACAC;QACA;MACA;IACA;IAEA;MACA;QACA;QACA;QACA;QACA;UACA;QACA;UACAA;QACA;MACA;QACAC;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;AACA","names":["name","data","step","props","source","valid","email","emailRules","v","password","passwordRules","methods","validate","method","document","alert","console"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n  <v-container class=\"fill-height\" fluid>\n    <v-row align=\"center\" justify=\"center\">\n      <v-col cols=\"10\" sm=\"5\" md=\"5\">\n        <v-card class=\"cardB\" height=\"310px\">\n          <v-card-title class=\"text-h6 justify-center\"\n            >Student Admission Management System (SAMS)</v-card-title\n          >\n          <v-divider></v-divider>\n          <v-container>\n            <v-container>\n             \n                <v-row>\n                  <v-col align-self=\"center\">\n                    <v-card-text class=\"text-h6 font-weight-light  mt-10\">\n                      <p class=\"pa-md-6 lg-auto\">\n                        Welcome to the University of Dodoma! <br />\n                        We are delighted that you have chosen to explore our\n                        institution \n                        and all that we have to offer.\n                        <br />\n                        Please take a moment to register and begin your journey\n                        with us.\n                      </p>\n                    </v-card-text>\n                  </v-col>\n                  <v-row>\n                    <v-col>\n                      <v-btn\n                        id=\"connectButton\"\n                        rounded\n                        width=\"200\"\n                        height=\"40\"\n                        color=\"primary\"\n                        dark\n                        bottom\n                        class=\"btn bg-primary\"\n                        elevation=\"20\"\n                        center\n                        @click=\"retrieveRequests()\"\n                      >\n                        CONNECT\n                      </v-btn>\n                    </v-col>\n                   \n                    <v-col>\n                      <v-btn\n                        :to=\"{ path }\"\n                        rounded\n                        width=\"200\"\n                        height=\"40\"\n                        color=\"primary\"\n                        dark\n                        bottom\n                        class=\"btn bg-primary\"\n                        elevation=\"20\"\n                        center\n                        @click=\"loginUsers()\"\n                      >\n                        LOGIN\n                      </v-btn>\n                    </v-col>\n                  </v-row>\n                </v-row>\n            </v-container>\n            <!-- -->\n            <!-- <v-card-actions>\n              <div class=\"row\">\n           \n                <v-btn\n                  width=\"200\"\n                  height=\"40\"\n                  color=\"primary\"\n                  class=\"mr-4\"\n                  elevation=\"20\"\n                  center\n                  @click=\"loginUsers()\"\n                >\n                  LOGIN\n                </v-btn>\n              </div>\n            </v-card-actions> \n\n            <v-container class=\"mt-5\">\n              <v-row>\n                <v-col cols=\"12\" md=\"6\">\n                  <router-link to=\"/\">Forgot Password?</router-link>\n                </v-col>\n\n                <v-col cols=\"12\" md=\"6\">\n                  <router-link to=\"/UserAccount\">Create Account</router-link>\n                </v-col>\n              </v-row>\n              <v-btn\n                id=\"connectButton\"\n                width=\"200\"\n                height=\"40\"\n                color=\"primary\"\n                elevation=\"20\"\n                @click=\"retrieveRequests()\"\n              >\n                CONNECT\n              </v-btn>\n            </v-container> -->\n          </v-container>\n        </v-card>\n      </v-col>\n    </v-row>\n\n    <v-footer color=\"#f5f5f5\" class=\"footer\">\n      <v-row justify=\"center\" no-gutters>\n        <p class=\"text-center mt-2 mb-0\">\n          <v-icon>mdi-copyright</v-icon> Copyright UDOM-Student Admission\n          System. All Rights Reserved {{ new Date().getFullYear() }}\n        </p>\n      </v-row>\n    </v-footer>\n  </v-container>\n</template>\n<script>\nimport { getSignerContract } from \"../interfaces/global.interface\";\n\nexport default {\n  name: \"HomeView\",\n  data: () => ({\n    step: \"\",\n    // path: \"\",\n\n    props: {\n      source: String,\n    },\n    valid: true,\n    email: \"\",\n    emailRules: [\n      (v) => !!v || \"E-mail is required\",\n      (v) => /.+@.+\\..+/.test(v) || \"E-mail must be valid\",\n    ],\n    password: \"\",\n    passwordRules: [\n      //(v) => !!v || \"Password is required\",\n      //(v) => /.+@.+\\..+/.test(v) || \"Password invalid\",\n    ],\n  }),\n\n  methods: {\n    validate() {\n      this.$refs.form.validate();\n    },\n    async retrieveRequests() {\n      //verify if the browser is running MetaMask\n      if (typeof window.ethereum !== \"undefined\") {\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\n        document.querySelector(\"#connectButton\").innerHTML = \"CONNECTED\";\n      } else {\n        document.querySelector(\"#connectButton\").innerHTML =\n          \"please install metamask!\";\n      }\n    },\n    async loginAdmin() {\n      if (window.ethereum) {\n        const contract = (await getSignerContract()).contract;\n        const result = await contract.isAdmin();\n        if (result.hash) {\n          this.$router.push(\"AdminOne\");\n        } else {\n          alert(\"Not Authorized\");\n        }\n      }\n    },\n\n    async loginUsers() {\n      if (window.ethereum) {\n        const contract = (await getSignerContract()).contract;\n        const result = await contract.loginUser();\n        // Check if transaction is successful\n        if (result.hash) {\n          this.$router.push(\"StudentOne\");\n        } else {\n          alert(\"Not Authorized\");\n        }\n      } else {\n        console.error(\"Ethereum provider not available in the browser.\");\n      }\n    },\n    // async loginUsers() {\n    //   if (window.ethereum) {\n    //     // const contract = (await getSignerContract()).contract;\n    //     const provider = new ethers.providers.Web3Provider(window.ethereum);\n    //     const signer = provider.getSigner();\n    //     const contract = new ethers.Contract(contractAddress, ABI, signer)\n\n    //     const result = await contract.loginUser();\n    //     // Check if transaction is successful\n    //     if (result.hash) {\n    //       this.$router.push('StudentOne')\n    //     } else {\n    //       alert('Not Authorized')\n    //     }\n    //   }\n    //   else {\n    //     console.error(\"Ethereum provider not available in the browser.\");\n    //   }\n  },\n};\n</script>\n<style scoped>\n.cardB {\n  background: #f5f5f5;\n  box-shadow: 0px 4px 4px rgba(255, 255, 255, 0.5);\n}\n.footer {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  height: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}