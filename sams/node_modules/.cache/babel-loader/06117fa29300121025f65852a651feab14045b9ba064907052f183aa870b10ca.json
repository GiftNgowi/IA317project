{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FooterView from \"./FooterView.vue\";\nimport { getSignerContract } from '../interfaces/global.interface';\nexport default {\n  name: \"UserAccount\",\n  components: {\n    FooterView\n  },\n  data() {\n    return {\n      username: null,\n      first_name: null,\n      last_name: null,\n      email: null,\n      users: []\n      // valid: true,\n      // name: \"\",\n      // nameRules: [\n      //   (v) => !!v || \"Name is required\",\n      //   (v) => (v && v.length <= 10) || \"Name must be less than 10 characters\",\n      // ],\n      // email: \"\",\n      // emailRules: [\n      //   (v) => !!v || \"E-mail is required\",\n      //   (v) => /.+@.+\\..+/.test(v) || \"E-mail must be valid\",\n      // ],\n      // password: \"\",\n      // confirmPassword: \"\",\n      // passwordRules: [(v) => !!v || \"Password is required\"],\n      // confirmPasswordRules: [(v) => !!v || \"Password is required\"],\n    };\n  },\n\n  // computed: {\n  //   passwordConfirmationRule() {\n  //     return () =>\n  //       this.password === this.confirmPassword || \"Password must match\";\n  //   },\n  // },\n  methods: {\n    async createAccount(e) {\n      e.preventDefault();\n      if (window.ethereum) {\n        const contract = (await getSignerContract()).contract;\n        const response = await contract.createAccount(this.username, this.first_name, this.last_name, this.email);\n        // Check if transaction is successful\n        if (response.hash) {\n          this.$router.push('/');\n        } else {\n          alert('');\n        }\n      } else {\n        console.error(\"Ethereum provider not available in the browser.\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAoEA;AAEA;AAGA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;;EACA;EACA;EACA;EACA;EACA;EACA;EACAC;IACA;MACAC;MACA;QACA;QAEA,8CACA,eACA,iBACA,gBACA,WACA;QACA;QACA;UACA;QACA;UACAC;QACA;MACA;QACAC;MACA;IACA;EACA;AACA","names":["name","components","FooterView","data","username","first_name","last_name","email","users","methods","e","alert","console"],"sourceRoot":"src/components","sources":["UserAccount.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-app-bar absolute> </v-app-bar>\n\n    <v-container>\n      <v-row align=\"center\" class=\"mt-15\">\n        <v-col>\n          <p class=\"text-h6 justify-center\">Create Account</p>\n          <v-divider></v-divider>\n          <v-container>\n            <div class=\"row\">\n              <form @submit=\"createAccount\" class=\"col s12\">\n                <v-text-field\n                    v-model=\"username\"\n                    :error-messages=\"errors\"\n                    label=\"Username\"\n                    required\n                  ></v-text-field>\n\n\n                <v-text-field\n                    v-model=\"first_name\"\n                    :error-messages=\"errors\"\n                    label=\"First Name\"\n                    required\n                  ></v-text-field>\n\n                <v-text-field\n                    v-model=\"last_name\"\n                    :error-messages=\"errors\"\n                    label=\"Last Name\"\n                    required\n                  ></v-text-field>\n\n                <v-text-field\n                    v-model=\"email\"\n                    :error-messages=\"errors\"\n                    label=\"Email\"\n                    required\n                  ></v-text-field>\n\n                <!-- <v-row>\n                <v-col cols=\"12\" sm=\"6\">\n                  <v-text-field\n                    label=\"Confirm Password:\"\n                    v-model=\"confirmPassword\"\n                    :rules=\"[confirmPasswordRules, passwordConfirmationRule]\"\n                    type=\"password\"\n                    required\n                    outlined\n                  ></v-text-field>\n                </v-col>\n              </v-row> -->\n\n                <v-btn type=\"submit\" v-text=\"'Create Account'\"></v-btn>\n              </form>\n              <br />\n            </div>\n            <router-link to=\"/\">Go to login-page</router-link>\n          </v-container>\n        </v-col>\n      </v-row>\n    </v-container>\n\n    <FooterView />\n  </v-app>\n</template>\n<script>\nimport FooterView from \"./FooterView.vue\";\n\nimport { getSignerContract } from '../interfaces/global.interface'\n\n\nexport default {\n  name: \"UserAccount\",\n  components: {\n    FooterView,\n  },\n  data() {\n    return {\n      username: null,\n      first_name: null,\n      last_name: null,\n      email: null,\n      users: [],\n      // valid: true,\n      // name: \"\",\n      // nameRules: [\n      //   (v) => !!v || \"Name is required\",\n      //   (v) => (v && v.length <= 10) || \"Name must be less than 10 characters\",\n      // ],\n      // email: \"\",\n      // emailRules: [\n      //   (v) => !!v || \"E-mail is required\",\n      //   (v) => /.+@.+\\..+/.test(v) || \"E-mail must be valid\",\n      // ],\n      // password: \"\",\n      // confirmPassword: \"\",\n      // passwordRules: [(v) => !!v || \"Password is required\"],\n      // confirmPasswordRules: [(v) => !!v || \"Password is required\"],\n    };\n  },\n  // computed: {\n  //   passwordConfirmationRule() {\n  //     return () =>\n  //       this.password === this.confirmPassword || \"Password must match\";\n  //   },\n  // },\n  methods: {\n    async createAccount(e) {\n      e.preventDefault();\n      if (window.ethereum) {\n        const contract = (await getSignerContract()).contract\n\n        const response = await contract.createAccount(\n          this.username,\n          this.first_name,\n          this.last_name,\n          this.email\n        );\n        // Check if transaction is successful\n        if (response.hash) {\n          this.$router.push('/')\n        } else {\n          alert('')\n        }\n      } else {\n        console.error(\"Ethereum provider not available in the browser.\");\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}